@model PaginatedList<Hotel.Models.TaiKhoanModel>
@{
    ViewData["Title"] = "Danh Sách Tài Khoản";

}

@section Title_Content{
    <div class="titleCreate col d-flex">
        <h3 class="page-title text-truncate text-dark font-weight-medium mb-0 me-4" style="line-height:34px;">Danh Sách Tài
            Khoản
        </h3>
        <a asp-action="Create" class="btn waves-effect waves-light btn-secondary mb-0"
            style="height:2.5em ; width:10rem">Tạo Tài Khoản</a>
    </div>
}
@section Itemt_Title{
    <form asp-action="Index" method="get" id="form-search">
        <div class="customize-input d-flex">
            <input placeholder="Tìm kiếm ..." type="text" name="SearchString" value='@ViewData["CurrentFilter"]' id="searchInput"
                class="form-control custom-shadow custom-radius border-1 border-light bg-white me-2" />
            <div class="d-flex align-items-center">
                <a asp-action="Index" class="back-search" class="btn waves-effect waves-light btn-primary">Back
                </a>
            </div>
        </div>
    </form>
}


<div class="table-responsive">
    <table class="table">
        <thead>
            <tr>
                <th>STT</th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().UserName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().UserPassword)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().PhoneNumber)
                </th>
                <th>
                    Quyền
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (Model == null || Model.Count <= 0)
            {
                <p class="text-danger">Danh sách rỗng!</p>
            }
            else
            {
                int soTT = 1;
                foreach (var item in Model)
                {
                    <tr>
                        <td>@(soTT++)</td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UserName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UserPassword)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PhoneNumber)
                        </td>
                        <td>
                            @{
                                if (item.IdRoleNavigation != null)
                                {

                                    if (item.IdRole == 99)

                                    {
                                        <span class="bg-warning p-2 text-white rounded">@Html.DisplayFor(modelItem =>
                        item.IdRoleNavigation.RoleName)</span>
                                    }

                                    else if (item.IdRole == 1)

                                    {
                                        <span class="bg-primary p-2 text-white rounded">@Html.DisplayFor(modelItem =>
                        item.IdRoleNavigation.RoleName)</span>
                                    }

                                    else if (item.IdRole == 0)

                                    {
                                        <span class="bg-success p-2 text-white rounded">@Html.DisplayFor(modelItem =>
                        item.IdRoleNavigation.RoleName)</span>
                                    }

                                    else if (item.IdRole == -1)

                                    {
                                        <span class="bg-danger p-2 text-white rounded">@Html.DisplayFor(modelItem =>
                        item.IdRoleNavigation.RoleName)</span>
                                    }
                                }
                            }

                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>


    <div class="tab-content" id="myTabContent">
        <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
            <br />
            <ul>
                @{
                    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                }
                <li class="d-inline">
                    <a asp-action="Index" asp-route-sortOrder='@ViewData["CurrentSort"]'
                        asp-route-pageNumber="@(Model.PageIndex - 1)"
                        asp-route-currentFilter='@ViewData["CurrentFilter"]' class="btn btn-default @prevDisabled">
                        Previous
                    </a>
                </li>
                @for (int i = 1; i <= Model.TotalPages ; i++)

                {
                    if (Model.PageIndex == i)
                    {
                        <li class="d-inline">
                            <a asp-action="Index" asp-route-sortOrder='@ViewData["CurrentSort"]' asp-route-pageNumber="@(i)"
                        asp-route-currentFilter='@ViewData["CurrentFilter"]' class="btn btn-primary @nextDisabled">
                                @i
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="d-inline">
                            <a asp-action="Index" asp-route-sortOrder='@ViewData["CurrentSort"]' asp-route-pageNumber="@(i)"
                        asp-route-currentFilter='@ViewData["CurrentFilter"]' class="btn btn-default @nextDisabled">
                                @i
                            </a>
                        </li>
                    }
                }
                <li class="d-inline">
                    <a asp-action="Index" asp-route-sortOrder='@ViewData["CurrentSort"]'
                        asp-route-pageNumber="@(Model.PageIndex + 1)"
                        asp-route-currentFilter='@ViewData["CurrentFilter"]' class="btn btn-default @nextDisabled">
                        Next
                    </a>
                </li>
            </ul>
        </div>
    </div>
</div>
